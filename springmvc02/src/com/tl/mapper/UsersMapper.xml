<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tl.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.tl.entity.Users" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="UNAME" property="uname" jdbcType="VARCHAR" />
    <result column="UPASS" property="upass" jdbcType="VARCHAR" />
    <result column="UAGE" property="uage" jdbcType="DECIMAL" />
    <result column="UBIRTH" property="ubirth" jdbcType="DATE" />
    <result column="USEX" property="usex" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, UNAME, UPASS, UAGE, UBIRTH, USEX
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tl.entity.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from USERS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from USERS
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from USERS
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.tl.entity.UsersExample" >
    delete from USERS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tl.entity.Users" >
    insert into USERS (ID, UNAME, UPASS, 
      UAGE, UBIRTH, USEX)
    values (#{id,jdbcType=DECIMAL}, #{uname,jdbcType=VARCHAR}, #{upass,jdbcType=VARCHAR}, 
      #{uage,jdbcType=DECIMAL}, #{ubirth,jdbcType=DATE}, #{usex,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tl.entity.Users" >
    insert into USERS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="uname != null" >
        UNAME,
      </if>
      <if test="upass != null" >
        UPASS,
      </if>
      <if test="uage != null" >
        UAGE,
      </if>
      <if test="ubirth != null" >
        UBIRTH,
      </if>
      <if test="usex != null" >
        USEX,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upass != null" >
        #{upass,jdbcType=VARCHAR},
      </if>
      <if test="uage != null" >
        #{uage,jdbcType=DECIMAL},
      </if>
      <if test="ubirth != null" >
        #{ubirth,jdbcType=DATE},
      </if>
      <if test="usex != null" >
        #{usex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tl.entity.UsersExample" resultType="java.lang.Integer" >
    select count(*) from USERS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update USERS
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.uname != null" >
        UNAME = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.upass != null" >
        UPASS = #{record.upass,jdbcType=VARCHAR},
      </if>
      <if test="record.uage != null" >
        UAGE = #{record.uage,jdbcType=DECIMAL},
      </if>
      <if test="record.ubirth != null" >
        UBIRTH = #{record.ubirth,jdbcType=DATE},
      </if>
      <if test="record.usex != null" >
        USEX = #{record.usex,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update USERS
    set ID = #{record.id,jdbcType=DECIMAL},
      UNAME = #{record.uname,jdbcType=VARCHAR},
      UPASS = #{record.upass,jdbcType=VARCHAR},
      UAGE = #{record.uage,jdbcType=DECIMAL},
      UBIRTH = #{record.ubirth,jdbcType=DATE},
      USEX = #{record.usex,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tl.entity.Users" >
    update USERS
    <set >
      <if test="uname != null" >
        UNAME = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upass != null" >
        UPASS = #{upass,jdbcType=VARCHAR},
      </if>
      <if test="uage != null" >
        UAGE = #{uage,jdbcType=DECIMAL},
      </if>
      <if test="ubirth != null" >
        UBIRTH = #{ubirth,jdbcType=DATE},
      </if>
      <if test="usex != null" >
        USEX = #{usex,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tl.entity.Users" >
    update USERS
    set UNAME = #{uname,jdbcType=VARCHAR},
      UPASS = #{upass,jdbcType=VARCHAR},
      UAGE = #{uage,jdbcType=DECIMAL},
      UBIRTH = #{ubirth,jdbcType=DATE},
      USEX = #{usex,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>

  <delete id="batchDeleteUser" parameterType="int">
    <!-- 直接传数组参数过来，参数类型写数组的类型 collection的值为array-->
    delete from users where id in
    <foreach collection="array" open="(" close=")" separator="," item="id">
      #{id}
    </foreach>
  </delete>

  <select id="getByIdsUsers" parameterType="int" resultMap="BaseResultMap">
    select * from users where id in
    <foreach collection="array" open="(" close=")" separator="," item="id">
      #{id}
    </foreach>
  </select>

</mapper>